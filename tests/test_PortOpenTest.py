import test_helpers
import PortOpenTest


def test_ctor():
    statement = test_helpers.O()
    statement.port = 100
    statement.protocol = 'UDP'
    statement.reachable = test_helpers.O()
    statement.reachable.should = 'should not'
    statement.reachable.host = 'example.com'

    pot = PortOpenTest.PortOpenTest(statement)
    assert pot.port == 100
    assert pot.protocol == 'UDP'
    assert pot.host == 'example.com'
    assert pot.should_pass is False


def test_run_success_tcp(mocker):
    statement = test_helpers.O()
    statement.port = 100
    statement.protocol = 'TCP'
    statement.reachable = test_helpers.O()
    statement.reachable.should = 'should'
    statement.reachable.host = 'example.com'

    mocker.patch('PortOpenTest.PortOpenTest.tcp_scan')
    PortOpenTest.PortOpenTest.tcp_scan.return_value = True
    pot = PortOpenTest.PortOpenTest(statement)
    q = test_helpers.Q()
    pot.run(q)
    assert q.what_was_put.passed is True


def test_run_success_udp(mocker):
    statement = test_helpers.O()
    statement.port = 100
    statement.protocol = 'UDP'
    statement.reachable = test_helpers.O()
    statement.reachable.should = 'should not'
    statement.reachable.host = 'example.com'

    mocker.patch('PortOpenTest.PortOpenTest.udp_scan')
    PortOpenTest.PortOpenTest.udp_scan.return_value = False
    pot = PortOpenTest.PortOpenTest(statement)
    q = test_helpers.Q()
    pot.run(q)
    assert q.what_was_put.passed is True


def test_run_failure(mocker):
    statement = test_helpers.O()
    statement.port = 100
    statement.protocol = 'UDP'
    statement.reachable = test_helpers.O()
    statement.reachable.should = 'should'
    statement.reachable.host = 'example.com'

    mocker.patch('PortOpenTest.PortOpenTest.udp_scan')
    PortOpenTest.PortOpenTest.udp_scan.return_value = False
    pot = PortOpenTest.PortOpenTest(statement)
    q = test_helpers.Q()
    pot.run(q)
    assert q.what_was_put.passed is False


def test_tcp_scan_success(mocker):
    statement = test_helpers.O()
    statement.port = 80
    statement.protocol = 'TCP'
    statement.reachable = test_helpers.O()
    statement.reachable.should = 'should'
    statement.reachable.host = 'google.com'

    pot = PortOpenTest.PortOpenTest(statement)
    assert pot.tcp_scan() is True


def test_tcp_scan_failure(mocker):
    statement = test_helpers.O()
    statement.port = 12345
    statement.protocol = 'TCP'
    statement.reachable = test_helpers.O()
    statement.reachable.should = 'should'
    statement.reachable.host = 'google.com'

    pot = PortOpenTest.PortOpenTest(statement)
    assert pot.tcp_scan() is False


def test_tcp_scan_failure2(mocker):
    statement = test_helpers.O()
    statement.port = 11223
    statement.protocol = 'TCP'
    statement.reachable = test_helpers.O()
    statement.reachable.should = 'should'
    statement.reachable.host = 'localhost'

    pot = PortOpenTest.PortOpenTest(statement)
    assert pot.tcp_scan() is False


def test_udp_scan_failure(mocker):
    statement = test_helpers.O()

    statement.port = 11223
    statement.protocol = 'UDP'
    statement.reachable = test_helpers.O()
    statement.reachable.should = 'should'
    statement.reachable.host = 'localhost'

    pot = PortOpenTest.PortOpenTest(statement)
    assert pot.udp_scan() is False

